//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 2/21/2024 4:06:39 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;
using Complain.Models;

namespace Complain.Data
{

    public partial class Db_ComplaintModel : DbContext
    {

        public Db_ComplaintModel() :
            base()
        {
            OnCreated();
        }

        public Db_ComplaintModel(DbContextOptions<Db_ComplaintModel> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured ||
                (!optionsBuilder.Options.Extensions.OfType<RelationalOptionsExtension>().Any(ext => !string.IsNullOrEmpty(ext.ConnectionString) || ext.Connection != null) &&
                 !optionsBuilder.Options.Extensions.Any(ext => !(ext is RelationalOptionsExtension) && !(ext is CoreOptionsExtension))))
            {
                optionsBuilder.UseSqlServer(@"Data Source=IT201;Initial Catalog=Db_Complaint;Integrated Security=True;Persist Security Info=False;Password=");
            }
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<Costomer> Costomers
        {
            get;
            set;
        }

        public virtual DbSet<Department> Departments
        {
            get;
            set;
        }

        public virtual DbSet<Manager> Managers
        {
            get;
            set;
        }

        public virtual DbSet<Position> Positions
        {
            get;
            set;
        }

        public virtual DbSet<Problem> Problems
        {
            get;
            set;
        }

        public virtual DbSet<Product> Products
        {
            get;
            set;
        }

        public virtual DbSet<Section> Sections
        {
            get;
            set;
        }

        public virtual DbSet<TypeFrom> TypeFroms
        {
            get;
            set;
        }

        public virtual DbSet<VEmployee> VEmployees
        {
            get;
            set;
        }

        public virtual DbSet<VCostomer> VCostomers
        {
            get;
            set;
        }

        public virtual DbSet<Status> Statuses
        {
            get;
            set;
        }

        public virtual DbSet<User> Users
        {
            get;
            set;
        }

        public virtual DbSet<VUser> VUsers
        {
            get;
            set;
        }

        public virtual DbSet<Form> Forms
        {
            get;
            set;
        }

        public virtual DbSet<VForm> VForms
        {
            get;
            set;
        }

        public virtual DbSet<Role> Roles
        {
            get;
            set;
        }

        public virtual DbSet<StatusU> StatusUs
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            this.CostomerMapping(modelBuilder);
            this.CustomizeCostomerMapping(modelBuilder);

            this.DepartmentMapping(modelBuilder);
            this.CustomizeDepartmentMapping(modelBuilder);

            this.ManagerMapping(modelBuilder);
            this.CustomizeManagerMapping(modelBuilder);

            this.PositionMapping(modelBuilder);
            this.CustomizePositionMapping(modelBuilder);

            this.ProblemMapping(modelBuilder);
            this.CustomizeProblemMapping(modelBuilder);

            this.ProductMapping(modelBuilder);
            this.CustomizeProductMapping(modelBuilder);

            this.SectionMapping(modelBuilder);
            this.CustomizeSectionMapping(modelBuilder);

            this.TypeFromMapping(modelBuilder);
            this.CustomizeTypeFromMapping(modelBuilder);

            this.VEmployeeMapping(modelBuilder);
            this.CustomizeVEmployeeMapping(modelBuilder);

            this.VCostomerMapping(modelBuilder);
            this.CustomizeVCostomerMapping(modelBuilder);

            this.StatusMapping(modelBuilder);
            this.CustomizeStatusMapping(modelBuilder);

            this.UserMapping(modelBuilder);
            this.CustomizeUserMapping(modelBuilder);

            this.VUserMapping(modelBuilder);
            this.CustomizeVUserMapping(modelBuilder);

            this.FormMapping(modelBuilder);
            this.CustomizeFormMapping(modelBuilder);

            this.VFormMapping(modelBuilder);
            this.CustomizeVFormMapping(modelBuilder);

            this.RoleMapping(modelBuilder);
            this.CustomizeRoleMapping(modelBuilder);

            this.StatusUMapping(modelBuilder);
            this.CustomizeStatusUMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }

        #region Costomer Mapping

        private void CostomerMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Costomer>().ToTable(@"Costomer", @"dbo");
            modelBuilder.Entity<Costomer>().Property(x => x.CostomerId).HasColumnName(@"Costomer_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<Costomer>().Property(x => x.CostomerName).HasColumnName(@"Costomer_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Costomer>().Property(x => x.Telephone).HasColumnName(@"Telephone").HasColumnType(@"nvarchar(10)").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Costomer>().Property(x => x.Address).HasColumnName(@"Address").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Costomer>().Property(x => x.ProductId).HasColumnName(@"Product_Id").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Costomer>().Property(x => x.ProductName).HasColumnName(@"Product_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Costomer>().HasKey(@"CostomerId");
        }

        partial void CustomizeCostomerMapping(ModelBuilder modelBuilder);

        #endregion

        #region Department Mapping

        private void DepartmentMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Department>().ToTable(@"Department", @"dbo");
            modelBuilder.Entity<Department>().Property(x => x.DepartmentId).HasColumnName(@"department_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<Department>().Property(x => x.DepartmentName).HasColumnName(@"department_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Department>().HasKey(@"DepartmentId");
        }

        partial void CustomizeDepartmentMapping(ModelBuilder modelBuilder);

        #endregion

        #region Manager Mapping

        private void ManagerMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Manager>().ToTable(@"Manager", @"dbo");
            modelBuilder.Entity<Manager>().Property(x => x.MngId).HasColumnName(@"Mng_Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Manager>().Property(x => x.MngName).HasColumnName(@"Mng_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Manager>().Property(x => x.MngMail).HasColumnName(@"Mng_mail").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Manager>().Property(x => x.ImgSignatureMng).HasColumnName(@"ImgSignature_Mng").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Manager>().HasKey(@"MngId");
        }

        partial void CustomizeManagerMapping(ModelBuilder modelBuilder);

        #endregion

        #region Position Mapping

        private void PositionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Position>().ToTable(@"Position", @"dbo");
            modelBuilder.Entity<Position>().Property(x => x.PositionId).HasColumnName(@"position_Id").HasColumnType(@"nvarchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10).HasPrecision(10, 0);
            modelBuilder.Entity<Position>().Property(x => x.PositionName).HasColumnName(@"position_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Position>().HasKey(@"PositionId");
        }

        partial void CustomizePositionMapping(ModelBuilder modelBuilder);

        #endregion

        #region Problem Mapping

        private void ProblemMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Problem>().ToTable(@"Problem", @"dbo");
            modelBuilder.Entity<Problem>().Property(x => x.ProblemId).HasColumnName(@"Problem_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<Problem>().Property(x => x.ProblemName).HasColumnName(@"Problem_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Problem>().HasKey(@"ProblemId");
        }

        partial void CustomizeProblemMapping(ModelBuilder modelBuilder);

        #endregion

        #region Product Mapping

        private void ProductMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Product>().ToTable(@"Product", @"dbo");
            modelBuilder.Entity<Product>().Property(x => x.ProductId).HasColumnName(@"Product_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Product>().Property(x => x.ProductName).HasColumnName(@"Product_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Product>().HasKey(@"ProductId");
        }

        partial void CustomizeProductMapping(ModelBuilder modelBuilder);

        #endregion

        #region Section Mapping

        private void SectionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Section>().ToTable(@"Section", @"dbo");
            modelBuilder.Entity<Section>().Property(x => x.SectionId).HasColumnName(@"section_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<Section>().Property(x => x.SectionName).HasColumnName(@"section_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Section>().HasKey(@"SectionId");
        }

        partial void CustomizeSectionMapping(ModelBuilder modelBuilder);

        #endregion

        #region TypeFrom Mapping

        private void TypeFromMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TypeFrom>().ToTable(@"Type From", @"dbo");
            modelBuilder.Entity<TypeFrom>().Property(x => x.TypeId).HasColumnName(@"Type_Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<TypeFrom>().Property(x => x.TypeName).HasColumnName(@"Type_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<TypeFrom>().HasKey(@"TypeId");
        }

        partial void CustomizeTypeFromMapping(ModelBuilder modelBuilder);

        #endregion

        #region VEmployee Mapping

        private void VEmployeeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<VEmployee>().ToTable(@"VEmployee", @"dbo");
            modelBuilder.Entity<VEmployee>().Property(x => x.Id).HasColumnName(@"Id").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VEmployee>().Property(x => x.EmpId).HasColumnName(@"Emp_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<VEmployee>().Property(x => x.EmpName).HasColumnName(@"Emp_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VEmployee>().Property(x => x.DepartmentId).HasColumnName(@"department_Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<VEmployee>().Property(x => x.PositionName).HasColumnName(@"position_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VEmployee>().Property(x => x.SectionId).HasColumnName(@"section_Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<VEmployee>().Property(x => x.DepartmentName).HasColumnName(@"department_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VEmployee>().Property(x => x.PositionId).HasColumnName(@"position_Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<VEmployee>().Property(x => x.SectionName).HasColumnName(@"section_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VEmployee>().HasKey(@"Id");
        }

        partial void CustomizeVEmployeeMapping(ModelBuilder modelBuilder);

        #endregion

        #region VCostomer Mapping

        private void VCostomerMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<VCostomer>().ToTable(@"VCostomer", @"dbo");
            modelBuilder.Entity<VCostomer>().Property(x => x.CostomerId).HasColumnName(@"Costomer_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<VCostomer>().Property(x => x.CostomerName).HasColumnName(@"Costomer_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VCostomer>().Property(x => x.ProductId).HasColumnName(@"Product_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VCostomer>().Property(x => x.ProductName).HasColumnName(@"Product_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VCostomer>().Property(x => x.Telephone).HasColumnName(@"Telephone").HasColumnType(@"nvarchar(10)").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<VCostomer>().Property(x => x.Address).HasColumnName(@"Address").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VCostomer>().HasKey(@"CostomerId");
        }

        partial void CustomizeVCostomerMapping(ModelBuilder modelBuilder);

        #endregion

        #region Status Mapping

        private void StatusMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Status>().ToTable(@"Status", @"dbo");
            modelBuilder.Entity<Status>().Property(x => x.StatusId).HasColumnName(@"Status_Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Status>().Property(x => x.StatusName).HasColumnName(@"Status_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Status>().HasKey(@"StatusId");
        }

        partial void CustomizeStatusMapping(ModelBuilder modelBuilder);

        #endregion

        #region User Mapping

        private void UserMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<User>().ToTable(@"User", @"dbo");
            modelBuilder.Entity<User>().Property(x => x.UserId).HasColumnName(@"User_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<User>().Property(x => x.UserName).HasColumnName(@"User_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property(x => x.Email).HasColumnName(@"email").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property(x => x.Password).HasColumnName(@"password").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property(x => x.DateLogin).HasColumnName(@"DateLogin").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<User>().Property(x => x.EmpDepartment).HasColumnName(@"Emp_department").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property(x => x.EmpSection).HasColumnName(@"Emp_section").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property(x => x.EmpPosition).HasColumnName(@"Emp_position").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property(x => x.RoleId).HasColumnName(@"Role_Id").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<User>().Property(x => x.StatusUsId).HasColumnName(@"StatusUs_Id").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<User>().Property(x => x.ImgProfile).HasColumnName(@"ImgProfile").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property(x => x.ImgSignature).HasColumnName(@"ImgSignature").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().HasKey(@"UserId");
        }

        partial void CustomizeUserMapping(ModelBuilder modelBuilder);

        #endregion

        #region VUser Mapping

        private void VUserMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<VUser>().ToTable(@"VUser", @"dbo");
            modelBuilder.Entity<VUser>().Property(x => x.UserId).HasColumnName(@"User_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VUser>().Property(x => x.Email).HasColumnName(@"email").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VUser>().Property(x => x.DateLogin).HasColumnName(@"DateLogin").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VUser>().Property(x => x.RoleId).HasColumnName(@"Role_Id").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<VUser>().Property(x => x.Password).HasColumnName(@"password").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VUser>().Property(x => x.EmpDepartment).HasColumnName(@"Emp_department").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VUser>().Property(x => x.EmpSection).HasColumnName(@"Emp_section").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VUser>().Property(x => x.EmpPosition).HasColumnName(@"Emp_position").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VUser>().Property(x => x.UserName).HasColumnName(@"User_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VUser>().Property(x => x.RoleName).HasColumnName(@"Role_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VUser>().Property(x => x.DepartmentName).HasColumnName(@"department_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VUser>().Property(x => x.SectionName).HasColumnName(@"section_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VUser>().Property(x => x.PositionName).HasColumnName(@"position_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VUser>().Property(x => x.StatusUsId).HasColumnName(@"StatusUs_Id").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<VUser>().Property(x => x.StatusUSName).HasColumnName(@"StatusUS_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VUser>().Property(x => x.ImgProfile).HasColumnName(@"ImgProfile").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VUser>().Property(x => x.ImgSignature).HasColumnName(@"ImgSignature").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VUser>().HasKey(@"UserId");
        }

        partial void CustomizeVUserMapping(ModelBuilder modelBuilder);

        #endregion

        #region Form Mapping

        private void FormMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Form>().ToTable(@"Form", @"dbo");
            modelBuilder.Entity<Form>().Property(x => x.FromId).HasColumnName(@"From_Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Form>().Property(x => x.FromData).HasColumnName(@"From_data").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<Form>().Property(x => x.ToId).HasColumnName(@"To_Id").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Form>().Property(x => x.CCId).HasColumnName(@"CC_Id").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Form>().Property(x => x.FromName).HasColumnName(@"From_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Form>().Property(x => x.CostomerId).HasColumnName(@"Costomer_Id").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Form>().Property(x => x.Lot).HasColumnName(@"lot").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<Form>().Property(x => x.ProblemId).HasColumnName(@"Problem_Id").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Form>().Property(x => x.ProblemOthet).HasColumnName(@"Problem_othet").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Form>().Property(x => x.Number).HasColumnName(@"number").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Form>().Property(x => x.Price).HasColumnName(@"Price").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Form>().Property(x => x.Co).HasColumnName(@"Co").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Form>().Property(x => x.TypeId).HasColumnName(@"Type_Id").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Form>().Property(x => x.Image).HasColumnName(@"Image").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Form>().Property(x => x.Note).HasColumnName(@"Note").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Form>().Property(x => x.UserId).HasColumnName(@"User_Id").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Form>().Property(x => x.MngId).HasColumnName(@"Mng_Id").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Form>().Property(x => x.StatusId).HasColumnName(@"Status_Id").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Form>().Property(x => x.ImgSignature).HasColumnName(@"ImgSignature").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Form>().Property(x => x.ImgSignatureMng).HasColumnName(@"ImgSignature_Mng").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Form>().HasKey(@"FromId");
        }

        partial void CustomizeFormMapping(ModelBuilder modelBuilder);

        #endregion

        #region VForm Mapping

        private void VFormMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<VForm>().ToTable(@"VForm", @"dbo");
            modelBuilder.Entity<VForm>().Property(x => x.FromId).HasColumnName(@"From_Id").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<VForm>().Property(x => x.FromData).HasColumnName(@"From_data").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.ToId).HasColumnName(@"To_Id").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<VForm>().Property(x => x.CCId).HasColumnName(@"CC_Id").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<VForm>().Property(x => x.FromName).HasColumnName(@"From_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.CostomerId).HasColumnName(@"Costomer_Id").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VForm>().Property(x => x.CostomerName).HasColumnName(@"Costomer_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VForm>().Property(x => x.Lot).HasColumnName(@"lot").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.Number).HasColumnName(@"number").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<VForm>().Property(x => x.Price).HasColumnName(@"Price").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<VForm>().Property(x => x.Co).HasColumnName(@"Co").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VForm>().Property(x => x.TypeId).HasColumnName(@"Type_Id").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<VForm>().Property(x => x.TypeName).HasColumnName(@"Type_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VForm>().Property(x => x.ProductId).HasColumnName(@"Product_Id").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.ProductName).HasColumnName(@"Product_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.Image).HasColumnName(@"Image").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VForm>().Property(x => x.Note).HasColumnName(@"Note").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.MngName).HasColumnName(@"Mng_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.MngMail).HasColumnName(@"Mng_mail").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.UserId).HasColumnName(@"User_Id").HasColumnType(@"int").ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<VForm>().Property(x => x.UserName).HasColumnName(@"User_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.ProblemOthet).HasColumnName(@"Problem_othet").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.ProblemId).HasColumnName(@"Problem_Id").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.ProblemName).HasColumnName(@"Problem_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.StatusId).HasColumnName(@"Status_Id").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<VForm>().Property(x => x.StatusName).HasColumnName(@"Status_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VForm>().Property(x => x.ImgSignature).HasColumnName(@"ImgSignature").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.MngId).HasColumnName(@"Mng_Id").HasColumnType(@"int").ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<VForm>().Property(x => x.ImgSignatureMng).HasColumnName(@"ImgSignature_Mng").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.EmpDepartment).HasColumnName(@"Emp_department").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.EmpSection).HasColumnName(@"Emp_section").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.EmpPosition).HasColumnName(@"Emp_position").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<VForm>().Property(x => x.DepartmentName).HasColumnName(@"department_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VForm>().Property(x => x.PositionName).HasColumnName(@"position_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VForm>().Property(x => x.SectionName).HasColumnName(@"section_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VForm>().HasKey(@"FromId");
        }

        partial void CustomizeVFormMapping(ModelBuilder modelBuilder);

        #endregion

        #region Role Mapping

        private void RoleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Role>().ToTable(@"Role", @"dbo");
            modelBuilder.Entity<Role>().Property(x => x.RoleId).HasColumnName(@"Role_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<Role>().Property(x => x.RoleName).HasColumnName(@"Role_name").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Role>().HasKey(@"RoleId");
        }

        partial void CustomizeRoleMapping(ModelBuilder modelBuilder);

        #endregion

        #region StatusU Mapping

        private void StatusUMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<StatusU>().ToTable(@"StatusUs", @"dbo");
            modelBuilder.Entity<StatusU>().Property(x => x.StatusUsId).HasColumnName(@"StatusUs_Id").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50).HasPrecision(10, 0);
            modelBuilder.Entity<StatusU>().Property(x => x.StatusUSName).HasColumnName(@"StatusUS_name").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<StatusU>().HasKey(@"StatusUsId");
        }

        partial void CustomizeStatusUMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
